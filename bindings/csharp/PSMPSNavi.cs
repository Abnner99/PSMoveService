//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PSMoveService {

public class PSMPSNavi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PSMPSNavi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PSMPSNavi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PSMPSNavi() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PSMoveClientPINVOKE.delete_PSMPSNavi(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PSMButtonState L1Button {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_L1Button_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState L2Button {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_L2Button_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState L3Button {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_L3Button_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState CircleButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_CircleButton_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState CrossButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_CrossButton_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState PSButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_PSButton_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState TriggerButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_TriggerButton_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState DPadUpButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_DPadUpButton_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState DPadRightButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_DPadRightButton_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState DPadDownButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_DPadDownButton_get(swigCPtr);
      return ret;
    } 
  }

  public PSMButtonState DPadLeftButton {
    get {
      PSMButtonState ret = (PSMButtonState)PSMoveClientPINVOKE.PSMPSNavi_DPadLeftButton_get(swigCPtr);
      return ret;
    } 
  }

  public byte TriggerValue {
    get {
      byte ret = PSMoveClientPINVOKE.PSMPSNavi_TriggerValue_get(swigCPtr);
      return ret;
    } 
  }

  public byte Stick_XAxis {
    get {
      byte ret = PSMoveClientPINVOKE.PSMPSNavi_Stick_XAxis_get(swigCPtr);
      return ret;
    } 
  }

  public byte Stick_YAxis {
    get {
      byte ret = PSMoveClientPINVOKE.PSMPSNavi_Stick_YAxis_get(swigCPtr);
      return ret;
    } 
  }

  public PSMPSNavi() : this(PSMoveClientPINVOKE.new_PSMPSNavi(), true) {
  }

}

}
