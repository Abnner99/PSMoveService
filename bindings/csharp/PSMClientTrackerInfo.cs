//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PSMoveService {

public class PSMClientTrackerInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PSMClientTrackerInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PSMClientTrackerInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PSMClientTrackerInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          PSMoveClientPINVOKE.delete_PSMClientTrackerInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int tracker_id {
    get {
      int ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_id_get(swigCPtr);
      return ret;
    } 
  }

  public PSMTrackerType tracker_type {
    get {
      PSMTrackerType ret = (PSMTrackerType)PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_type_get(swigCPtr);
      return ret;
    } 
  }

  public PSMTrackerDriver tracker_driver {
    get {
      PSMTrackerDriver ret = (PSMTrackerDriver)PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_driver_get(swigCPtr);
      return ret;
    } 
  }

  public string device_path {
    get {
      string ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_device_path_get(swigCPtr);
      return ret;
    } 
  }

  public string shared_memory_name {
    get {
      string ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_shared_memory_name_get(swigCPtr);
      return ret;
    } 
  }

  public PSMVector2f tracker_focal_lengths {
    get {
      global::System.IntPtr cPtr = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_focal_lengths_get(swigCPtr);
      PSMVector2f ret = (cPtr == global::System.IntPtr.Zero) ? null : new PSMVector2f(cPtr, false);
      return ret;
    } 
  }

  public PSMVector2f tracker_principal_point {
    get {
      global::System.IntPtr cPtr = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_principal_point_get(swigCPtr);
      PSMVector2f ret = (cPtr == global::System.IntPtr.Zero) ? null : new PSMVector2f(cPtr, false);
      return ret;
    } 
  }

  public PSMVector2f tracker_screen_dimensions {
    get {
      global::System.IntPtr cPtr = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_screen_dimensions_get(swigCPtr);
      PSMVector2f ret = (cPtr == global::System.IntPtr.Zero) ? null : new PSMVector2f(cPtr, false);
      return ret;
    } 
  }

  public float tracker_hfov {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_hfov_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_vfov {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_vfov_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_znear {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_znear_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_zfar {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_zfar_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_k1 {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_k1_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_k2 {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_k2_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_k3 {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_k3_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_p1 {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_p1_get(swigCPtr);
      return ret;
    } 
  }

  public float tracker_p2 {
    get {
      float ret = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_p2_get(swigCPtr);
      return ret;
    } 
  }

  public PSMPosef tracker_pose {
    get {
      global::System.IntPtr cPtr = PSMoveClientPINVOKE.PSMClientTrackerInfo_tracker_pose_get(swigCPtr);
      PSMPosef ret = (cPtr == global::System.IntPtr.Zero) ? null : new PSMPosef(cPtr, false);
      return ret;
    } 
  }

  public PSMClientTrackerInfo() : this(PSMoveClientPINVOKE.new_PSMClientTrackerInfo(), true) {
  }

}

}
